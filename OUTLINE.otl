プロジェクト概要
	三体問題を計算する。
	誤差を少なく、計算速度を早く
	追加で例えば二重振り子などもできるかも。

使うネットワーク
	softmaxを活性化函数として利用
	その他、できるだけネットワークは深くなり過ぎない。

	先を読みすぎるネットワークはあまり上手く動かない。
	細分化して作る。

	0.1秒後、0.01秒後等々
	それらを組み合わせる事で効率化を図る。

シュミレーション　Python	
	TB_Problem.py
		計算に必要なものを詰め込んだライブラリ。
		このモジュールでは、三体問題の計算等を行う。
			計算モジュール
			データ生成モジュール
			グラフ化モジュール


構造
	メインニューラルネットワークと、誤差訂正ニューラルモジュールの二つから作成
